# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SFNS Display Regular 14

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec rofi -show run -lines 3 -eh 2 -width 100 -padding 480 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd" -font "SFNS Display Regular 18"

# ssh to host
bindsym $mod+x exec rofi -show ssh -lines 3 -eh 2 -width 100 -padding 480 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd" -font "SFNS Display Regular 18"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# scratchpad
bindsym $mod+Shift+z move scratchpad
bindsym $mod+z scratchpad show

# workspace name variables
set $workspace1 "1  "
set $workspace2 "2  "
set $workspace3 "3  "
set $workspace4 "4  "
set $workspace5 "5  "
set $workspace6 "6  "
set $workspace7 "7  "
set $workspace8 "8  "
set $workspace9 "9  "
set $workspace10 "10  "

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Do you really want to exit i3?' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# color variables
set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3blocks
	colors {
		background $bg-color
	    	separator #757575
		#                  border             background         text
		focused_workspace  $bg-color          $bg-color          $text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	}
}

# Workspace buttons
# Specifies whether workspace buttons should be shown or not. This is useful if you want to display a statusline-only bar containing additional information.
# The default is to show workspace buttons.
# Syntax:
# workspace_buttons yes|no
# Example:
# bar {
#    workspace_buttons no
# }

# screenlock
bindsym ctrl+$mod+l exec i3lock -c 000000 -n

# Take a screenshot upon pressing $mod+x (select an area)
#bindsym --release $mod+x exec --no-startup-id import /tmp/latest-screenshot.png
bindsym Print exec gnome-screenshot -w -B

# orientation for new workspaces
#default_orientation horizontal|vertical|auto

# layout mode for new containers
#workspace_layout default|stacking|tabbed

# Hiding borders adjacent to the screen edges
# You can hide container borders adjacent to
# the screen edges using hide_edge_borders.
# This is useful if you are using scrollbars,
# or do not want to waste even two pixels in displayspace.
# Default is none.
#hide_edge_borders none|vertical|horizontal|both
hide_edge_borders both

# Enable floating mode for all XTerm windows
#for_window [class="XTerm"] floating enable
#
# Make all urxvts use a 1-pixel border:
#for_window [class="urxvt"] border pixel 1
#
# A less useful, but rather funny example:
# makes the window floating as soon as I change
# directory to ~/work
#for_window [title="x200: ~/work"] floating enable

# Don’t focus window upon opening
#no_focus [window_role="pop-up"

# Assign URxvt terminals to workspace 2
#assign [class="URxvt"] 2
#
# Same thing, but more precise (exact match instead of substring)
#assign [class="^URxvt$"] 2
#
# Same thing, but with a beautiful arrow :)
#assign [class="^URxvt$"] → 2
#
# Assignment to a named workspace
#assign [class="^URxvt$"] → work
#
# Start urxvt -name irssi
#assign [class="^URxvt$" instance="^irssi$"] → 3


# if you want to start an application just once on a specific workspace,
#  but you don’t want to assign all instances of it permanently,
#  you can make use of i3’s startup-notification support:
# Start iceweasel on workspace 3, then switch back to workspace 1
# (Being a command-line utility, i3-msg does not support startup notifications,
#  hence the exec --no-startup-id.)
# (Starting iceweasel with i3’s exec command is important in order to make i3
#  create a startup notification context, without which the iceweasel window(s)
#  cannot be matched onto the workspace on which the command was started.)
#exec --no-startup-id i3-msg 'workspace 3; exec iceweasel; workspace 1'

# Automatically putting workspaces on specific screens:
#  xrandr --current
#workspace <workspace> output <output>
#workspace 1 output LVDS1
#workspace 5 output VGA1
#workspace "2: vim" output VGA1

# Focus follows mouse
# By default, window focus follows your mouse movements.
#  However, if you have a setup where your mouse usually is in your way
#  (like a touchpad on your laptop which you do not want to disable completely),
#  you might want to disable focus follows mouse and control focus only by using your keyboard.
#  The mouse will still be useful inside the currently active window
#  (for example to click on links in your browser window).
#focus_follows_mouse yes|no

# Mouse warping
# By default, when switching focus to a window on a different output
#  (e.g. focusing a window on workspace 3 on output VGA-1,
#  coming from workspace 2 on LVDS-1), the mouse cursor is warped to the center of that window.
#  With the mouse_warping option, you can control when the mouse cursor should be warped.
#  none disables warping entirely, whereas output is the default behavior described above.
#mouse_warping output|none

# Popups during fullscreen mode
#popup_during_fullscreen smart|ignore|leave_fullscreen

# Focus wrapping
#force_focus_wrapping yes|no

# Forcing Xinerama
#force_xinerama yes|no

# Automatic back-and-forth when switching to the current workspace
# For instance: Assume you are on workspace "1: www" and switch to "2: IM"
#  using mod+2 because somebody sent you a message.
#  You don’t need to remember where you came from now,
#  you can just press $mod+2 again to switch back to "1: www".
#workspace_auto_back_and_forth yes|no

# Delaying urgency hint reset on workspace change
# The default is 500ms.
#force_display_urgency_hint 500 ms

# Focus on window activation
# The default is "smart".
#focus_on_window_activation smart|urgent|focus|none

# Drawing marks on window decoration
# The default for this option is yes.
#show_marks yes|no

# Border settings
for_window [class="^google-chrome$"] border none
for_window [class="^Firefox$" title="^Mozilla Firefox$"] border none
for_window [class="^Slack$"] border none
for_window [window_role="gnome-terminal-window"] border pixel 2

# Enable floating
for_window [class="^Lxappearance$"] floating enable
for_window [class="^vlc$"] floating enable
for_window [title="^File Transfers$"] floating enable
for_window [title="Options"] floating enable

# Fullscreen
#for_window [class="xbmc.bin"] fullscreen

# Move to workspaces
#for_window [class="^URxvt$"] move workspace $workspace7

# Assign to workspaces
assign [class="^google-chrome$"] → $workspace1
assign [class="^Firefox$"] → $workspace1
assign [class="^Slack$"] → $workspace2
assign [class="^Skype$"] → $workspace3
assign [class="^ViberPC$"] → $workspace4
assign [class="^Telegram$"] → $workspace4
assign [class="^Virt-manager$"] → $workspace5
assign [class="^Remmina$"] → $workspace5
assign [class="^Vmware$"] → $workspace5
assign [class="^Nautilus$"] → $workspace6
assign [class="^vlc$"] → $workspace8
assign [class="^Unity-control-center$"] → $workspace10

# autostart
exec --no-startup-id unity-settings-daemon -r
exec --no-startup-id nm-applet
exec --no-startup-id setxkbmap "us,ru" ",winkeys" "grp:alt_shift_toggle"
exec --no-startup-id gxkb
exec --no-startup-id xfce4-volumed
exec --no-startup-id pasystray
exec --no-startup-id feh --bg-scale /usr/share/backgrounds/knowledge_is_power.jpg
exec --no-startup-id compton --config ~/.compton.conf -b
exec unity-control-center
#
exec google-chrome
exec slack
exec skype --dbpath=~/.Skype
exec skype --dbpath=~/.Skype2
exec /opt/viber/Viber
exec /opt/Telegram/Telegram
exec virt-manager
exec nautilus
exec --no-startup-id i3-msg 'workspace $workspace7; exec gnome-terminal; workspace $workspace1'

